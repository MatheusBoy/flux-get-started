---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: sealed-secrets-HelmRepository
  namespace: default
spec:
  # The interval at wich to check the upstream for updates
  interval: 10m
  # The repository URL, a valid URL contains at least a protocol and host
  url: https://bitnami-labs.github.io/
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sealed-secrets-controller
  namespace: sealed-secrets
spec:
  releaseName: sealed-secrets-controller
  targetNamespace: sealed-secrets

  chart:
    spec:
      chart: sealed-secrets
      version: >= 1.0.0
      sourceRef:
        kind: HelmRepository
        name: sealed-secrets-HelmRepository
        namespace: default

  helmVersion: v3
  maxHistory: 30

  values:
    image:
      repository: quay.io/bitnami/sealed-secrets-controller
      tag: v0.15.0
      pullPolicy: IfNotPresent

    commandArgs:
      - "--key-renew-period"
      - "24h"

    resources: 
      limits:
        cpu: 100m
        memory: 216Mi
      requests:
        cpu: 100m
        memory: 216Mi

    nodeSelector: {}
    tolerations: []
    affinity: {}

    controller:
      # controller.create: `true` if Sealed Secrets controller should be created
      create: true

    namespace: "sealed-secrets"

    serviceAccount:
      # serviceAccount.create: Whether to create a service account or not
      create: true
      # serviceAccount.name: The name of the service account to create or use
      name: ""

    rbac:
      # rbac.create: `true` if rbac resources should be created
      create: true
      pspEnabled: false

    # secretName: The name of the TLS secret containing the key used to encrypt secrets
    secretName: "sealed-secrets-key"

    ingress:
      enabled: false
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      path: /v1/cert.pem
      hosts:
        - chart-example.local
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    crd:
      # crd.create: `true` if the crd resources should be created
      create: true
      # crd.keep: `true` if the sealed secret CRD should be kept when the chart is deleted
      keep: true

    networkPolicy: false

    securityContext:
      # securityContext.runAsUser defines under which user the operator Pod and its containers/processes run.
      runAsUser: 1001
      # securityContext.fsGroup defines the filesystem group
      fsGroup: 65534

    podAnnotations: {}

    podLabels: {}

    priorityClassName: ""
